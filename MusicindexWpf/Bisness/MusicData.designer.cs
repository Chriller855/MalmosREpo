#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bisness
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MusicIndex")]
	public partial class MusicDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMusik(Musik instance);
    partial void UpdateMusik(Musik instance);
    partial void DeleteMusik(Musik instance);
    #endregion
		
		public MusicDataDataContext() : 
				base(global::Bisness.Properties.Settings.Default.MusicIndexConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MusicDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Musik> Musiks
		{
			get
			{
				return this.GetTable<Musik>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Musik")]
	public partial class Musik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MusikId;
		
		private string _Title;
		
		private string _Kunstner;
		
		private string _Album;
		
		private string _Længte;
		
		private string _Sti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMusikIdChanging(int value);
    partial void OnMusikIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnKunstnerChanging(string value);
    partial void OnKunstnerChanged();
    partial void OnAlbumChanging(string value);
    partial void OnAlbumChanged();
    partial void OnLængteChanging(string value);
    partial void OnLængteChanged();
    partial void OnStiChanging(string value);
    partial void OnStiChanged();
    #endregion
		
		public Musik()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MusikId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MusikId
		{
			get
			{
				return this._MusikId;
			}
			set
			{
				if ((this._MusikId != value))
				{
					this.OnMusikIdChanging(value);
					this.SendPropertyChanging();
					this._MusikId = value;
					this.SendPropertyChanged("MusikId");
					this.OnMusikIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kunstner", DbType="NChar(10)")]
		public string Kunstner
		{
			get
			{
				return this._Kunstner;
			}
			set
			{
				if ((this._Kunstner != value))
				{
					this.OnKunstnerChanging(value);
					this.SendPropertyChanging();
					this._Kunstner = value;
					this.SendPropertyChanged("Kunstner");
					this.OnKunstnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Album", DbType="NChar(10)")]
		public string Album
		{
			get
			{
				return this._Album;
			}
			set
			{
				if ((this._Album != value))
				{
					this.OnAlbumChanging(value);
					this.SendPropertyChanging();
					this._Album = value;
					this.SendPropertyChanged("Album");
					this.OnAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Længte", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Længte
		{
			get
			{
				return this._Længte;
			}
			set
			{
				if ((this._Længte != value))
				{
					this.OnLængteChanging(value);
					this.SendPropertyChanging();
					this._Længte = value;
					this.SendPropertyChanged("Længte");
					this.OnLængteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sti", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string Sti
		{
			get
			{
				return this._Sti;
			}
			set
			{
				if ((this._Sti != value))
				{
					this.OnStiChanging(value);
					this.SendPropertyChanging();
					this._Sti = value;
					this.SendPropertyChanged("Sti");
					this.OnStiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
